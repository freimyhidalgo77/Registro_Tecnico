@page "/Clientes/Index"
@rendermode InteractiveServer
@inject ClienteService clienteService
@inject NavigationManager navigation

<PageTitle>Cliente</PageTitle>
<div class="container card shadow-lg">
    <div class="card-header text-center bi bi-person-badge">
        <h3><strong>Clientes</strong></h3>
    </div>

    @*Header*@
    <div class="row mb-3 aling-items-end">
        <div class="col-md-3">
            <label for="Filtro" class="form-label"><strong>Filtrar por:</strong></label>
            <InputSelect id="filtro" class="form-select" @bind-Value="filtro">
                <option value="" disabled>Seleccionar</option>
                <option value="ClienteId">Cliente Id</option>
                <option value="NombreCliente">Nombre</option>
            </InputSelect>
        </div>
        <div class="col-md-6">
            <label for="ValorFiltro" class="form-label"><strong>B&uacute;squeda:</strong></label>
            <div class="input-group">
                <input @bind="ValorFiltro" class="form-control" placeholder="Buscar" />
                <button @onclick="Buscar" class="btn btn-success" type="button">
                    <span class="bi bi-search"></span> Buscar
                </button>
            </div>
        </div>
        <div class="col-md-3 d-flex align-items-end justify-content-md-end mt-3 mt-md-0">
            <a href="/Clientes/Create" class="btn btn-success bi bi-plus-square-fill"> Crear</a>
        </div>
    </div>

    @*Body*@
    <div class="card-body">
        <table class="table table-light table-bordered">
            <thead class="table table-striped text-center table-bordered mt-3">
                <tr>
                    <th>Cliente ID</th>
                    <th>Nombre</th>
                    <th>Numero de Whatsapp</th>
                    <th>Ver</th>
                    <th>Editar</th>
                    <th>Eliminar</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var cliente in clientes)
                {
                    <tr>
                        <td class="text-center">@cliente.ClienteId</td>
                        <td class="text-center">@cliente.NombreCliente</td>
                        <td class="text-center">@cliente.NumeroWhatsapp</td>
                        <td class="text-center">
                            <a href="/Clientes/Details/@cliente.ClienteId" class="btn btn-outline-info bi bi-eye"></a>
                        </td>
                        <td class="text-center">
                            <a href="/Clientes/Edit/@cliente.ClienteId" class="btn btn-outline-warning bi bi-pencil-square"></a>
                        </td>
                        <td class="text-center">
                            <a href="/Clientes/Delete/@cliente.ClienteId" class="btn btn-outline-danger bi bi-trash"></a>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>

@code {

    public List<Clientes> clientes = new List<Clientes>();
    private string filtro { get; set; } = "id";
    private string ValorFiltro { get; set; } = string.Empty;

    protected override async Task OnInitializedAsync()
    {
        clientes = await clienteService.Listar(t => true);


    }

    private async Task Buscar()
    {
        if (!string.IsNullOrWhiteSpace(ValorFiltro))
        {
            if (filtro == "ClienteId" && int.TryParse(ValorFiltro, out int ClienteId))
            {
                clientes = await clienteService.Listar(c => c.ClienteId == ClienteId);
            }
            else if (filtro == "NombreCliente")
            {
                clientes = await clienteService.Listar(c => c.NombreCliente.Contains(ValorFiltro, StringComparison.OrdinalIgnoreCase));
            }

        }
    }
}

         